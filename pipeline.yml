resources:
- name: hourly-check
  type: time
  source:
    interval: 1h
jobs:
  - name: Prometheus
    plan:
    - get: hourly-check
      trigger: true
    - task: curl
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: appropriate/curl
        params:
            grafana: {{grafana}}
        run:
          path: sh
          args:
          - -c
          - |
            i=0
            while [[ $i -ne 10 ]]; do
              code=`curl -LI $grafana -o /dev/null -w '%{http_code}\n' -s`;
              if [[ ${code} = "200" ]]; then
                  echo ${code};
                echo "ok";
              else
                echo "abort!!";
                exit 1
              fi
              i=`expr $i + 1`;
              sleep 1;
            done
  - name: 'Application Service'
    plan:
    - get: hourly-check
      trigger: true
    - task: curl
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: appropriate/curl
            tag: latest
        params:
            pasapi: {{pasapi}}
        run:
          path: sh
          args:
          - -c
          - |
            i=0
            while [[ $i -ne 10 ]]; do
              code=`curl -LI $pasapi -o /dev/null -w '%{http_code}\n' -s`;
              if [[ ${code} = "200" ]]; then
                  echo ${code};
                echo "ok";
              else
                echo "abort!!";
                exit 1
              fi
              i=`expr $i + 1`;
              sleep 1;
            done
  - name: 'Container Service'
    plan:
    - get: hourly-check
      trigger: true
    - task: curl
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: appropriate/curl
            tag: latest
        params:
            pksapi: {{pksapi}}
        run:
          path: sh
          args:
          - -c
          - |
            i=0
            while [[ $i -ne 10 ]]; do
              code=`curl -LI https://$pksapi --insecure -o /dev/null -w '%{http_code}\n' -s`;
              if [[ ${code} = "200" ]]; then
                  echo ${code};
                echo "ok";
              else
                echo "abort!!";
                exit 1
              fi
              i=`expr $i + 1`;
              sleep 1;
            done
  - name: Healthwatch
    plan:
    - get: hourly-check
      trigger: true
    - task: curl
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: appropriate/curl
            tag: latest
        params:
            hw: {{hw}}
        run:
          path: sh
          args:
          - -c
          - |
            i=0
            while [[ $i -ne 10 ]]; do
              code=`curl -LI $hw -o /dev/null -w '%{http_code}\n' -s`;
              if [[ ${code} = "200" ]]; then
                  echo ${code};
                echo "ok";
              else
                echo "abort!!";
                exit 1
              fi
              i=`expr $i + 1`;
              sleep 1;
            done
  - name: Harbor
    plan:
    - get: hourly-check
      trigger: true
    - task: curl
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: appropriate/curl
            tag: latest
        params:
            harbor: {{harbor}}
        run:
          path: sh
          args:
          - -c
          - |
            i=0
            while [[ $i -ne 10 ]]; do
              code=`curl $harbor -o /dev/null -w '%{http_code}\n' -s`;
              if [[ ${code} = "200" ]]; then
                  echo ${code};
                echo "ok";
              else
                echo "abort!!";
                exit 1
              fi
              i=`expr $i + 1`;
              sleep 1;
            done
  - name: 'Ops Manager'
    plan:
    - get: hourly-check
      trigger: true
    - task: ping
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: appropriate/curl
            tag: latest
        params:
            opsman: {{opsman}}
        run:
          path: sh
          args:
          - -c
          - |
            ping -c 5 $opsman
  - name: 'PCF Metrics'
    plan:
    - get: hourly-check
      trigger: true
    - task: curl
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: appropriate/curl
            tag: latest
        params:
            metrics: {{metrics}}
        run:
          path: sh
          args:
          - -c
          - |
            i=0
            while [[ $i -ne 10 ]]; do
              code=`curl -LI https://$metrics --insecure -o /dev/null -w '%{http_code}\n' -s`;
              if [[ ${code} = "200" ]]; then
                  echo ${code};
                echo "ok";
              else
                echo "abort!!";
                exit 1
              fi
              i=`expr $i + 1`;
              sleep 1;
            done
  - name: 'Redis Broker'
    plan:
    - get: hourly-check
      trigger: true
    - task: curl
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: appropriate/curl
            tag: latest
        params:
            redis: {{redis}}
        run:
          path: sh
          args:
          - -c
          - |
            i=0
            while [[ $i -ne 10 ]]; do
              code=`curl -LI $redis -o /dev/null -w '%{http_code}\n' -s`;
              if [[ ${code} = "200" ||  ${code} = "401" ]]; then
                  echo ${code};
                echo "ok";
              else
                echo "abort!!";
                exit 1
              fi
              i=`expr $i + 1`;
              sleep 1;
            done